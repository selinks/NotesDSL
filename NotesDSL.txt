NotesDSL.txt


Wed Oct 26 16:45:08 EEST 2022

v0.0.1.0

NotesDSL<NotesDSL>


NotesDSL<NotesDSL>

NotesDSL is NL subset with added own syntax and semantics, represents NL thinking in NL typed NL notions as NotesDSL operating with NotesDSL notions-types-categories, that contain NL notions.

NotesDSL is initial notion-type-category, that contains NL description of itself.

NotesDSL syntax is regular, NotesDSL semantics is syntactic and represented as runtime of NotesDSL interpreter implementation of NotesDSL.




Sun Oct 30 17:29:34 EET 2022

v0.0.2.0

PhysicalRealityLawSyntacticBehaviour{PhysicalRealityLawSyntacticBehaviour}


PhysicalRealityLawSyntacticBehaviour{PhysicalRealityLawSyntacticBehaviour}

First law is that everything is vzaimosvyazano and everything have it's own cause.

PhysicalRealityLawSyntacticBehaviour potentially contains everything and is abstraction with abstract barrier from PhysicalReality <- EathGeographicLocation.

At first, possible to add NotesDSL goal, but it is very abstract, instead, it is better to add information about process of self-extending of NotesDSL.




Mon Oct 31 10:41:45 EET 2022

v0.0.2.1

PhysicalRealityLawSyntacticBehaviour{PhysicalRealityLawSyntacticBehaviour}


PhysicalRealityLawSyntacticBehaviour{PhysicalRealityLawSyntacticBehaviour}

What type will be added next?

AbstractInterpreter (abstracting from Myself, but stills to be Personal) is NotesDSL implementation in NL, it's Runtime InitialState has NotesDSL Operations as NotesDSL CLI commands, for example, AbstractInterpreter.init. TODO: Add more description from PL.

GitHubRepositoryNotesDSLProjectApproach<NotesDSL.txt>{InitialState States LastState FinalState} <- Notes.txtRuntime is NotesDSL.txt representation, but we have Self-extendable AbstractInterpreter that writes it's own source code, extend it and interpret itself.

Could not define Metaknowledge, because all information about NotesDSL is already known.

Simply define Set subtype and describe all it's subtypes in Set{Set}.




Sat Nov 5 08:54:30 EET 2022

v0.0.3.0

PhysicalRealityLawSyntacticBehaviour{PhysicalRealityLawSyntacticBehaviour} <- Metaknowledge{Metaknowledge} <- Set{Set}


Metaknowledge{Metaknowledge}

Defined Metaknowledge for models of represented in Notes (NotesDSL.txt) NotesDSL, representation of representation, self-representation of self-representation, self-extending of self-extending.


Set{Set}

Set is collection of elements-objects with associations between them, always finite because 7 objects pruning rule. Set behaviour oncludes operations adding and removing. If remove all elements, get empty set, with representation as {} (syntactic separators-delimeters). In set are introduced 7 first elements of 7 subsets, so it is model of PRLSB - Set<AllFiniteSets<>>.




Sun Nov 6 15:59:30 EET 2022

v0.0.4.0

PRLSB -> Metaknowledge(Model, PRLSB){SetofAllFiniteSets}


Metaknowledge{SetofAllFiniteSets}

Metaknowledge(Set, Sequense, SymbolicLink, Abstraction, Type, Class, Category){{Set Element Object Notion Association ...} {Sequence Cause-Consequence State Position Space TimeofElementAdditionSequense ...} {SymbolicLink Relation Function Behaviour (Self-)Operation ...} {Abstraction HighestAbstractionofProcessStatesOperation(WidestNotionofPhysicalReality) Abstracting/Concretising ...} {Type System ...} {Class Hierarchy ...} {Category CategoryTheory ...}}

Metaknowledge with has a parameterisation instantiates compound values of set1-set7.




Wed Nov 16 15:38:30 EET 2022

v0.0.5.0

Metaknowledge - Perception - Self-Perception


Metaknowledge{Metaknowledge}

Set (empty) contained itself: AbstractSet - TheSameSetContainedItselfConcretised; all is in perception, physical reality have perception of humans being: AbstractPerceptionorPotentialPerception - Self-PerceptionConcretisedorActualPerception, MetaknowledgeandPerception - Self-PerceptionandMetaknowledgeModelofSelf-Perception, Metaknowledge - Perception(PhysicalReality(Myself)) - Self-Perception(PhysicalRealityandMyself(Concisiousness)) - MetaknowledgeModelofMyself; Myself - Concisiousness, Psychics, etc.

Metaknowledge - HighestAbstractionofProcessStatesOperations(WidestNotionofPhysicalRealitywithMyself) - PhysicalRealityLawandSyntacticBehaviour - MetaknowledgeModelofMyself Nature People Society Science Technology etc.

Metaknowledge concretisation: ClassofBasicType<Set Notion Class Category> - ClassofBasicObject(ParameterofClassofType) -instantiation-> ObjectofType




Thu Nov 17 15:29:30 EET 2022

v0.0.5.1

Metaknowledge - Perception - Self-Perception


Metaknowledge{Metaknowledge}

TODO: Example of RuntimeObject in JavaScriptInterpreter{Node.js}.


Perception{Perception}

TODO: Node.js RuntimeObject with built in commands.




Sun Oct 20 16:40:30 EET 2022

v0.0.5.2

Metaknowledge - Perception - Self-Perception


Metaknowledge{Metaknowledge}

Thinking in objects and associations.

PhysicalReality as basic type of all objects, interesting representation by Myself in Perception.

PerceptionStatesPercepting(PhysicalReality(Myself)) - Self-Perception(PhysicalRealityandMyselforConsciousnessorPsychicsorPerson).

Consider abstract objects that will be concretised later in subtype objects, process of Abstraction/Concretisation-Typisation is constant in Perception.

PerceptionStatesPercepting(PhysicalReality(Myself)) is abstracted/concrerised-typed as ProcessesStatesOperations(PhysicalReality(Myself)) - PotentialPerception, for all HumanBeings.

Self-Perception(PhysicalRealityandMyselforConsciousnessorPsychicsorPerson) is abstracted/concrerised-typed as PhysicalRealityLawSyntacticBehaviour - ActualPerception, for Myself.

In Self-Perception Metaknowledge is represented as MetaknowledgeModelofMyself.

So, PhysicalReality represents / is represented by Myself Perception, in Self-Perception Metaknowledge, MetaknowledgeModelofMyself, Myself appear.




Sun Nov 20 17:16:30 EET 2022

v0.0.6.0

Metaknowledge - PSO(PR) - PRLSB - MetaknowledgeModelofMyself


MetaknowledgeModelofMyself(AbstractSet){SetofAllFiniteSets}

Consider AbstractSet object, associated with Metaknowledge.

ClassofBasicTypes<ClassofAbstractSetType ClassofAbstractObjectofType> - ClassofAbstractObjectofType(ClassofAbstractSetType) - OperationRepresentationInstantiation - ObjectofTypeofSetorType(Set)

TODO:
Try to use only Set Type System.
Metaknowledge(Set, Sequense, SymbolicLink, Abstraction, Type, Class, Category){{Set Element Object Notion Association ...} {Sequence Cause-Consequence State Position Space TimeofElementAdditionSequense ...} {SymbolicLink Relation Function Behaviour (Self-)Operation ...} {Abstraction HighestAbstractionofProcessStatesOperation(WidestNotionofPhysicalReality) Abstracting/Concretising ...} {Type System ...} {Class Hierarchy ...} {Category CategoryTheory ...}}
Metaknowledge concretisation: ClassofBasicType<Set Notion Class Category> - ClassofBasicObject(ParameterofClassofType) -instantiation-> ObjectofType




Tue Nov 22 17:01:30 EET 2022

v0.0.6.1

Metaknowledge - PSO(AoPR) - PRLSB - MMoM


MMoM(Set) - AllFiniteSets or MMoM(Set){AllFiniteSets}

Set object, associated with MMoM, type of association is aggregation, if Set would appear earlier, type of association would be composition.

Metaknowledge - {ClassofAbstractType<ClassofTypeofSet ClassofTypeofNotion ClassofTypeofClass ClassofTypeofCategory ClassofTypeofProjectNotesDSL ClassofObjectofType> - ClassofObjectofType(ClassofTypeofSet) - association type OperationRepresentationInstantiation - ObjectofTypeofSetorType(Set) - TypeofSetSystem}

TODO:
Try to use only Set Type System.
Metaknowledge(Set, Sequense, SymbolicLink, Abstraction, Type, Class, Category){{Set Element Object Notion Association ...} {Sequence Cause-Consequence State Position Space TimeofElementAdditionSequense ...} {SymbolicLink Relation Function Behaviour (Self-)Operation ...} {Abstraction HighestAbstractionofProcessStatesOperation(WidestNotionofPhysicalReality) Abstracting/Concretising ...} {Type System ...} {Class Hierarchy ...} {Category CategoryTheory ...}}




Sat Dec 3 11:34:30 EET 2022

v0.0.7.0

Knowledge - KnowledgeaboutItself


Knowledge

ThoughtsandThinking representation in notes (PenandPencil or ComputerFile methods of storing) at levels of Knowledge, Perception, Myself all are with NotesDSL notation at 4 levels: 1) Notions and Subtyping Operation (Relation) System; 2) Objects and Associations Operations (Relations, declarative definition by use cases) System (Operations are Objects, OperationRepresentation{Implementation, Instantiation}); 3) Classes in ClassHierarchy System (TODO: see UML notation); 4) Categories in CategoriesSystem (TODO: see Category Theory). By default, OaA notation of NotesDSL is used, but all 4 notations, perhaps, will be equivalent since NotesDSL v0.1.0.0.

{Knowledge - KnowledgeaboutItself} - {Metaknowledge - Knowledge} - {Metaknowledge - Perception(PhysicalReality(Myself)) - Self-PerceptionwithPhysicalRealityandMyself(Consciousness) - {MetaknowledgeModelofMyself, MyselfFiniteSets}}

Perception(PhysicalReality(Myself)) - OperationRepresentationasPotentialPerception - ProcessesStatesOperations(AbstractionofPhysicalReality)
S-PwPRaM(C) - ORasActualP - PhysicalRealityLawSyntacticBehaviour(AbstractionofMyself)

M - PSO(AoPR) - PRLSB(AoM) - MMoM, MFS
M - PSO(AoPR) - PRLSB(AoM) - {MMoM(HasaAggregationorComposition) - MMoMFiniteSets}, MFS




Sat Dec 3 12:22:30 EET 2022

v0.0.7.1

M - PSO(AoPR) - PRLSB(AoM) - {MMoM(Set, Sequense, SymbolicLink, Abstraction, Type, Class, Category) - MMoMFS{
Set{Set, Element, Object, Notion, Association, ...},
Sequence{Sequence, Cause-Consequence, State, Position, Space, TimeofElementAdditionSequense, ...},
SymbolicLink{SymbolicLink, Relation, Function, Operation, Representation, Implementation, Instantion, Behaviour, Self-Operation, ...},
Abstraction{Abstraction, HighestAbstractionofProcessesStatesOperations(WidestNotionofPhysicalReality), Abstracting/Concretising, ...},
Type{Type, System, ...},
Class{Class, Hierarchy, ...},
Category{Category, CategoryTheory, ...}
}, MFS


MMoMFS

Rule of if 7+-2 objects then pruning is used.




Sat Dec 3 12:44:30 EET 2022

v0.0.8.0

Metaknowledge - {ClassofAbstractType - {ClassofTypeofNotion, ClassofTypeofSet, ClassofTypeofClass, ClassofTypeofCategory, {ClassofTypeObjectofType(ClassofTypeofSet) - OperationRepresentationInstantiation -}}} - ObjectofTypeofSetorType(Set)orTypeofObjectofSet - TypeofObjectofSetSystem


M

Up to NotesDSL 3rd level of notation Classes in ClassHierarchy System and, perhaps, runtime representation in PL (JavaScript, Ruby, etc.), {M - TypeofObjectofSet - TypeofObjectofSetSystem} shortened runtime is used: (or M{M, TypeofObjectofSet, TypeofObjectofSetSystem{TypeofObjectofSetSystem, PSO(AoPR), PRLSB(AoM), MMoM(HaAoC){MMoM, MMoMFS}, MFS(MMoMFS){MFS}}}.




Sat Dec 3 13:19:30 EET 2022

v0.0.9.0

M - PSO(AoPR) - PRLSB - {{MMoM(NL, NotesDSL, ProjectApproach, Interpreter) - OperationRepresentation - AbstractMachine(Storage, My(Self-)NotesDSLandNLInterpretertoRuntime, My(Self-)RuntimeInterpretertoStorage, REPL) - OperationRepresentationImplementation - StorageasGitHubRepositoryNotesDSL(NotesDSL.txt)}, MFS}


MMoM

TODO: Type infer with new NL values to M - TypeofObjectofSet - PSO(AoPR{AoPR, NL, NotesDSL, ProjectApproach, Interpreter}) - PRLSB(Self-Interpretation) - {MMoM, MFS}




Sun Dec 4 11:45:30 EET 2022

v0.0.10.0

Metaknowledge - OperationRepresentationInstantiation - TypeofObjectofSet - TypeofObjectofSetSystem


Metaknowledge

ThinkingofThoughtsorKnowledgeorPerceptionorNotesDSLNotationLevel(Default-ObjectsandAssociations-SetsSystem)orRuntimeorMyselforPersonorPsycheorConsciousness{M - ORIn - ToOoS - ToOoSS}

{M} - {CoAT{CoToN, CoToS, CoToCl, CoToCat} - CoOoT<CoToS>}


ToOoS

{ToOoS} - {ToOoS{AoPR, AoM}}


ToOoSS

{ToOoS - ToOoSS} - {ToOoS{{AoPR - BookPLPaP}, {AoM - Self-Interpretation}} - ToOoSS{PSO<BookPLPaP> - PRLSB<Self-Interpretation> - {MMoM - ORIm - MMoMFS}, MFS}}




Sun Dec 4 12:15:30 EET 2022

v0.0.11.0

CoAT{CoToN, CoToS, CoToCl, CoToCat} - CoOoT<CoToS> - ORIn - ToOoS{{AoPR - BookPLPaP}, {AoM - My(Self-)Interpretation}} - ToOoSS{PSO<BookPLPaP> - PRLSB<My(Self-)Interpretation> - {MMoM(NotesDSLDefinitionbyImplementationofAM, Interpreter, Storage, Operations) - ORImwPA - MMoMFS{My(Self-)AM, StorageasNotesDSL.txt, NDSLaNLM(S-)ItR, RM(S-)ItNDSL.txt, RuntimeinMyself, My(Self-)OperationsasREPL}}, MFS}


TODO: Add NL values for singleton types - symbols.




Sun Dec 4 12:26:30 EET 2022

v0.1.0.0

CoAT{CoToN, CoToS, CoToCl, CoToCat} - CoOoT<CoToS> - ORIn - ToOoS{{AoPR - BookPLPaP}, {AoM - My(Self-)Interpretation}} - ToOoSS{PSO<BookPLPaP> - PRLSB<My(Self-)Interpretation> - {MMoM - ORImwPA - MMoMFS}, MFS{
Nature - 1,
People - 1, 2 - HumanBeing - 3,
Society - 2,
{Science - FormalSciences - 4, {HumanitarianSciences - {Linguistics - NL - 5}, Psychology - 3 - PersonorMyself - 6}},
Technology - Computing - 4 - CS - 5 - PL - DSL - AM(Storage, Interpreter, Operations) - 6 - ORImwPA - My(Self-)AM{StorageasNotesDSL.txt, NDSLaNLM(S-)ItR, RM(S-)ItNDSL.txt, RuntimeinMyself, My(Self-)OperationsasREPL} - NotesDSL}}


TODO: Add NL values for singleton types - symbols.












